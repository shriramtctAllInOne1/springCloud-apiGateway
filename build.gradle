plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.0'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id 'jacoco'
	id 'com.palantir.docker' version '0.26.0'
	id 'com.palantir.docker-run' version '0.26.0'

}

group = 'com.springboot.cloud'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://repo.spring.io/snapshot' }
}

ext {
	set('springCloudVersion', "2021.0.6")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	implementation 'org.springframework.cloud:spring-cloud-starter-gateway'
	implementation 'org.springframework.cloud:spring-cloud-starter-zookeeper-discovery'
	implementation 'org.projectlombok:lombok:1.18.12'
	annotationProcessor 'org.projectlombok:lombok'


	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

sourceSets{
	main{
		java.srcDirs=['src/main/java']
		resources.srcDirs=["src/main/resources","devops/"]
	}
}

bootJar{
	destinationDirectory=project.layout.buildDirectory.dir('libs')
}

String imageName = "${project.group}/${project.name}"
docker {
	dockerfile file('Dockerfile')
	dependsOn(tasks.findByPath("build"))
	name imageName
	files bootJar.archiveFile.get()
	buildArgs(['JAR_FILE': "${bootJar.archiveFileName.get()}"])
}

dockerRun {
	name "${project.name}-container"
	image imageName
	ports '8081:8081'
	env 'SPRING_PROFILES_ACTIVE': 'dev'
	daemonize true
	clean false
}

